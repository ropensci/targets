% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_dynamic_head.R
\name{tar_dynamic_head}
\alias{tar_dynamic_head}
\alias{head}
\title{Dynamic head}
\usage{
tar_dynamic_head(x, n = 1L)
}
\arguments{
\item{x}{Data frame with columns to represent targets and
elements to represent branches or buds. Column names must
be unique.}

\item{n}{Number of branches to create. Cannot exceed \code{nrow(x)}.}
}
\description{
Branch over the first few elements in a pattern.
}
\details{
In \code{\link[=tar_target]{tar_target()}}, \code{pattern = head(x, n = 5)}
branches over the first 5 elements of \code{x}. \code{head()} can be
composed with other kinds of patterns: for example,
\code{pattern = head(map(x, y), n = 5)}.
To test and experiment with this behavior outside
the pipeline, use the \code{tar_dynamic_head()} function.
}
\examples{
# To use dynamic head for real in a pipeline,
# call head() in a target's pattern.
# The following code goes at the bottom of _targets.R.
tar_pipeline(
  tar_target(x, seq_len(26)),
  tar_target(dynamic, x + 1, pattern = head(x, n = 2)) # 2 branches
)
# To explore dynamic head() outside a pipeline,
# use the tar_dynamic_head() helper function.
x <- data.frame(x = seq_len(26))
tar_dynamic_head(x, n = 2)
# You can experiment with more complicated patterns.
# The following is a representation of pattern = head(map(x, y), n = 2).
y <- data.frame(y = letters)
tar_dynamic_head(tar_dynamic_map(x, y), n = 2)
}
\seealso{
Other Dynamic branching: 
\code{\link{tar_dynamic_cross}()},
\code{\link{tar_dynamic_map}()},
\code{\link{tar_dynamic_sample}()},
\code{\link{tar_dynamic_tail}()}
}
\concept{Dynamic branching}
